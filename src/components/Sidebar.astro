---
const pages = await Promise.all(
  Object.entries(import.meta.glob<{ default: any }>('../pages/**/*.{astro,md,mdx,html}', { eager: true }))
    .map(async ([path, module]) => {
      return {
        file: path,
        ...module.default
      };
    })
);

// 处理页面数据，创建导航结构
const navigation = pages.map(page => {
  const path = page.file.split('/pages')[1];
  // 获取目录路径
  const dirPath = path.split('/').slice(0, -1).join('/');
  // 获取文件名
  const fileName = path.split('/').pop()?.replace(/\.(astro|md|mdx|html)$/, '') || '';
  
  // 如果是 index 文件，使用父目录名作为标题
  const title = fileName === 'index' 
    ? dirPath.split('/').pop() || 'Home'
    : fileName;
  
  // 构建路径，index 文件使用目录路径
  const urlPath = fileName === 'index' 
    ? dirPath 
    : path.replace(/\.(astro|md|mdx|html)$/, '');
  
  return {
    title: title.charAt(0).toUpperCase() + title.slice(1),
    path: urlPath,
  };
});

// 按路径排序
navigation.sort((a, b) => a.path.localeCompare(b.path));
---

<nav class="sidebar">
  <ul>
    {navigation.map(item => (
      <li>
        <a href={item.path} class:list={[
          'nav-link',
          { active: Astro.url.pathname === item.path }
        ]}>
          {item.title}
        </a>
      </li>
    ))}
  </ul>
</nav>

<style>
  .sidebar {
    width: 250px;
    height: 100vh;
    padding: 1rem;
    background-color: #f8f9fa;
    border-right: 1px solid #e9ecef;
  }

  ul {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .nav-link {
    display: block;
    padding: 0.5rem 1rem;
    color: #333;
    text-decoration: none;
    border-radius: 4px;
    transition: background-color 0.2s;
  }

  .nav-link:hover {
    background-color: #e9ecef;
  }

  .nav-link.active {
    background-color: #007bff;
    color: white;
  }
</style> 